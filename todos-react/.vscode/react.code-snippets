{
  // Place your hello-react workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Create Function Component": {
    "scope": "typescriptreact",
    "prefix": "cfc",
    "body": [
      "type Props = {",
      "  $2",
      "};",
      "",
      "function $TM_FILENAME_BASE(props: Props) {",
      "  return (",
      "    <div className=\"$TM_FILENAME_BASE\">",
      "      ${1:$TM_FILENAME_BASE}",
      "    </div>",
      "  );",
      "}",
      "",
      "export default $TM_FILENAME_BASE;",
      ""
    ]
  },
  "Create Class Component": {
    "scope": "typescriptreact",
    "prefix": "ccc",
    "body": [
      "import { Component } from 'react';",
      "",
      "type Props = {};",
      "type State = {};",
      "",
      "class $TM_FILENAME_BASE extends Component<Props, State> {",
      "  state: State = {};",
      "  render() {",
      "    return <div className=\"$TM_FILENAME_BASE\">${1:$TM_FILENAME_BASE}</div>;",
      "  }",
      "}",
      "",
      "export default $TM_FILENAME_BASE;",
      ""
    ]
  }
}
